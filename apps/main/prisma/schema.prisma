// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int            @id @default(autoincrement())
  email               String         @unique
  name                String         @unique
  posts               Post[]
  password            String
  emailConfirmed      DateTime?
  emailConfirmation   Confirmations? @relation(fields: [emailConfirmationId], references: [id])
  passRecovery        PassRecovery?  @relation(fields: [passRecoveryId], references: [id])
  passRecoveryId      String?        @unique
  emailConfirmationId Int?           @unique
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt()
  session             Session[]

  @@unique([email, name, emailConfirmationId, passRecoveryId])
}

model Confirmations {
  id          Int      @id @default(autoincrement())
  code        String?
  isConfirmed Boolean  @default(false)
  expiresIn   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
  user        User?
  userId      Int?
}

model PassRecovery {
  id                 String   @id @default(cuid())
  code               String
  activated          Boolean  @default(false)
  codeExpirationDate DateTime @default(now())
  userId             Int      @unique
  User               User?
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  code      Int
  message   String
  timestamp DateTime @default(now())
  extraData Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Session {
  id             String   @id @default(cuid())
  ip             String
  lastActiveDate DateTime
  deviceId       String
  userId         Int
  RFTokenIAT     DateTime

  // Связь с User
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}
